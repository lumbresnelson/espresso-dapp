import React from 'react';
import { useInternetIdentity } from '../hooks/useInternetIdentity';
import { useGetUserDeploymentHistory } from '../hooks/useQueries';
import { User, Rocket, Calendar, Hash, ExternalLink } from 'lucide-react';

export default function UserDashboard() {
  const { identity } = useInternetIdentity();
  const { data: deployments, isLoading, error } = useGetUserDeploymentHistory(identity?.getPrincipal());

  const formatTimestamp = (timestamp: bigint) => {
    const date = new Date(Number(timestamp) / 1000000);
    const now = new Date();
    const diffMs = now.getTime() - date.getTime();
    const diffMinutes = Math.floor(diffMs / (1000 * 60));
    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));
    const diffDays = Math.floor(diffMs / (1000 * 60 * 60 * 24));

    if (diffMinutes < 1) return 'just now';
    if (diffMinutes < 60) return `${diffMinutes} minute${diffMinutes > 1 ? 's' : ''} ago`;
    if (diffHours < 24) return `${diffHours} hour${diffHours > 1 ? 's' : ''} ago`;
    if (diffDays < 30) return `${diffDays} day${diffDays > 1 ? 's' : ''} ago`;
    
    return date.toLocaleDateString();
  };

  const truncateHash = (hash: string) => {
    return `${hash.slice(0, 10)}...${hash.slice(-8)}`;
  };

  if (isLoading) {
    return (
      <div className="bg-gray-800 rounded-lg p-6">
        <div className="flex items-center space-x-3 mb-6">
          <User className="w-6 h-6 text-blue-400" />
          <h2 className="text-xl font-semibold text-white">My Deployments</h2>
        </div>
        <div className="text-center py-8">
          <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-400 mx-auto"></div>
          <p className="text-gray-400 mt-2">Loading your deployments...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="bg-gray-800 rounded-lg p-6">
        <div className="flex items-center space-x-3 mb-6">
          <User className="w-6 h-6 text-blue-400" />
          <h2 className="text-xl font-semibold text-white">My Deployments</h2>
        </div>
        <div className="text-center py-8">
          <p className="text-red-400">Failed to load your deployments</p>
        </div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      <div className="bg-gray-800 rounded-lg p-6">
        <div className="flex items-center justify-between mb-6">
          <div className="flex items-center space-x-3">
            <User className="w-6 h-6 text-blue-400" />
            <h2 className="text-xl font-semibold text-white">My Deployments</h2>
            <span className="bg-gray-700 text-gray-300 px-2 py-1 rounded-full text-sm">
              {deployments?.length || 0} deployments
            </span>
          </div>
        </div>

        {!deployments || deployments.length === 0 ? (
          <div className="text-center py-8">
            <Rocket className="w-12 h-12 text-gray-600 mx-auto mb-4" />
            <p className="text-gray-400 mb-2">You haven't deployed any canisters yet</p>
            <p className="text-gray-500 text-sm">Deploy your first canister to see it here</p>
          </div>
        ) : (
          <div className="space-y-4">
            {deployments.map((deployment, index) => (
              <div key={index} className="bg-gray-700 rounded-lg p-4 hover:bg-gray-650 transition-colors">
                <div className="flex items-start justify-between">
                  <div className="space-y-2 flex-1">
                    <div className="flex items-center space-x-3">
                      <div className="flex items-center space-x-2">
                        <ExternalLink className="w-4 h-4 text-blue-400" />
                        <code className="text-blue-300 font-mono text-sm bg-gray-800 px-2 py-1 rounded">
                          {deployment.canisterId}
                        </code>
                      </div>
                    </div>
                    
                    <div className="flex items-center space-x-4 text-sm text-gray-400">
                      <div className="flex items-center space-x-1">
                        <Hash className="w-3 h-3" />
                        <span>{truncateHash(deployment.wasmHash)}</span>
                      </div>
                      <div className="flex items-center space-x-1">
                        <Calendar className="w-3 h-3" />
                        <span>{formatTimestamp(deployment.timestamp)}</span>
                      </div>
                    </div>
                  </div>
                  
                  <div className="flex space-x-2 ml-4">
                    <button
                      onClick={() => window.open(`https://${deployment.canisterId}.ic0.app`, '_blank')}
                      className="px-3 py-1 bg-blue-600 hover:bg-blue-700 text-white text-sm rounded transition-colors"
                    >
                      Visit
                    </button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        )}
      </div>

      {/* Stats Card */}
      {deployments && deployments.length > 0 && (
        <div className="bg-gray-800 rounded-lg p-6">
          <h3 className="text-lg font-semibold text-white mb-4">Deployment Statistics</h3>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="bg-gray-700 rounded-lg p-4 text-center">
              <div className="text-2xl font-bold text-blue-400">{deployments.length}</div>
              <div className="text-gray-400 text-sm">Total Deployments</div>
            </div>
            <div className="bg-gray-700 rounded-lg p-4 text-center">
              <div className="text-2xl font-bold text-green-400">
                {deployments.length > 0 ? formatTimestamp(deployments[0].timestamp) : 'N/A'}
              </div>
              <div className="text-gray-400 text-sm">Latest Deployment</div>
            </div>
            <div className="bg-gray-700 rounded-lg p-4 text-center">
              <div className="text-2xl font-bold text-purple-400">
                {new Set(deployments.map(d => d.wasmHash)).size}
              </div>
              <div className="text-gray-400 text-sm">Unique WASM Modules</div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
}
